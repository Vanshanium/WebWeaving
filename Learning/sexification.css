/* 
CSS - Cascading Style Sheets 
It is called Cascading as it uses the Cascade algorithm - https://en.wikipedia.org/wiki/Cascade_algorithm

It have a Priority list like this 

Inline styles (style attribute): Highest specificity.
ID selectors: Higher than class or tag selectors.
Class selectors: Higher than element (tag) selectors.
Universal selectors (*): Lowest specificity.
U can use the !Importnat declaration to overide other sytles.


The CSS can be used in three ways, Inline, Internal and External (See the HTML file)


Syntaxxx

selector {

    property:value;

}

*/

/* You can Import a font using @import or <link> in the html the html one is faster! 
here https://www.stevesouders.com/blog/2009/04/09/dont-use-import/ just because it can cause FOUC the flash of unstyled content*/


/* Types of Selectors  */


*{
    color:black;

    /* This is called the universal selector which selects everything */
    /* You can see that the browser have prefered the red heading as it was inline */
}

h2{

    font-family: 'Poppins', Courier, monospace;
    font-weight: 900;
    text-align: center;
    letter-spacing: 2px;
    text-transform: uppercase;
    border: 4px dotted #8D0B41 ;
    border-radius: 50px;

}

p{
    
    color: #D6CFB4;
    background-color: #8D0B41;
    /* This is called the element selector, it selects all tag of the name */
    
}
 
p::selection{
    color: #8D0B41;
    background-color: #D6CFB4;
    
}


#gibrish{
    
    color: aqua;
    /* This is the ID selector.... */
}

.dexter{
    
    color: violet;
    background-color: slategrey;
}

[href^="https://"]{

    color: green;
    /* This is attribute selector with which u can select using the attribute of the html elements */

}


body{

    background-image: url('./src/Background.png');
    height: 100vh;
    width: 100wh;


}


#Odin{

    /* He is the kamasutra for the positioning https://www.youtube.com/watch?v=jx5jmI0UlXU&t=396s */
    
    /* Fonts for the elements */
    text-align: center;
    font-family: 'Poppins',sans-serif;
    font-size: 30px;
    font-weight: 700;

    height: 500px;
    width: 700px;
    background-color: #175E4A ;
    border-radius: 40px;


    position: relative;
    top: 20px;

}

#Thor{

    /* Fonts for the elements */
    font-size: 20px;
    font-weight: 400;

    height: 200px;
    width: 500px;
    background-color: #DB3A45;
    border-radius: 20px;

    position: absolute;
    top: 50px;
    left: 100px;

}


#Loki{

    /* Fonts for the elements */
    font-size: 10px;
    font-weight: 400;

    height: 40px;
    width: 300px;
    background-color: #FEB566;
    border-radius: 10px;

    position: absolute;
    top: 250px;
    left: 200px;
}



/* Here are some variables  */
:root {

    --blue-sex: #4999BC;
}


#Social_Panel{

    /* This is called a Flexbox with which u can have elements arranges with ease.. */
    
    
    position: fixed;
    left: 0px;
    top: 10vh;
    height: 70vh;
    width: 7vw;
    /* Instead of using the 120x760px we can use the percentage of length and width of the display to make it dynamic
    see this bible for units https://www.youtube.com/watch?v=fzZTvLmmTzM&t=659s */

    border-radius: 0.4rem;
    background-color: var(--blue-sex);
    
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: nowrap;
    /* gap: 0.1em; ; */
    z-index: 1;

}


#Social_Button {
    display: inline-block;
    width: 1vw; /* Icon width */
    height: 60px; /* Icon height */
}

#Social_Button {
    display: inline-block;
    width: 4vw; /* Icon width */
    height: auto; /* Let the height scale proportionally */
}

#Social_Button img {
    width: 100%; /* Make the image take up the full width of the parent */
    height: auto; /* Maintain aspect ratio */
    object-fit: contain; /* Ensure the image doesn't get cropped */
}

#Social_Button:hover{

    background-color: #ccb362;
    border-radius: 1em;
    /* THis is called the Pseudo Class which have the css when certain condition is achived!  */
    /*https://miro.medium.com/v2/resize:fit:640/format:webp/1*ho6bMjASuvNi_YXJcmjF_w.png Heres all of them! */
}


#Grid_Div{

    /* Grid is simplely amazing, you can convert ur desgins to websites with grids! */
    /* Learn it from here https://youtube.com/watch?v=EiNiSFIPIQE */
    
    display: grid;
    grid-template-columns: 100px 100px 100px 100px;
    grid-template-rows: repeat(6, 100px);
    height: 600px;
    width: 400px;
    position: fixed;
    top: 50px;
    left: 100px;

    background-color: #368ae9;
    border-radius: 40px;
    z-index: 1;
}

#Gird_Child_1{

    background-color: white;
    padding: 100px;
    border-radius: 20px;

    grid-area: 2 / 2 / 4 / 4;
    /* grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 3;
    grid-column-end: 4; */
}

#Gird_Child_1:active {
    transition: transform 0.3s ease, background-color 0.3s ease;
    transform: scale(0.8) rotate(15deg);
    background-color: rgb(131, 199, 131);
 }
  
#Gird_Child_2{

    background-color: white;
    padding: 20px;
    border-radius: 20px;

    grid-area: 2 / 4 / 2 / 5 ;

}

@keyframes tatti_animation{
    
/* You can make your custom animation using transformations but the real shit is 3js lets go soab */
    25% {
      transform: rotate(45deg);
      opacity: 0.5;
      transform: scale(0.5) ;
    }
    50% {
      transform: rotate(-30deg);
      opacity: 1;
    }
    100% {
      transform: rotate(360deg);
      opacity: 1;
    }
}

  #Gird_Child_2:active {
    animation: tatti_animation 4s;
    background-color: rgb(131, 199, 131);
 }



#Gird_Child_3{

    background-color: white;
    padding: 20px;
    border-radius: 20px;

    grid-area: 3 / 4 / 4 / 5 ;

}

#blur{

    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;

    background: rgba(255, 247, 247, 0.5);
    backdrop-filter: blur(20px);
    /* z-index: 0; */
}

/* I will learn animations from the Projects lets not waste time 
https://www.w3schools.com/css/css3_2dtransforms.asp here is the Tranformations  */



/* Css Can be worked with some onther markup languages like xml we'll see after this */